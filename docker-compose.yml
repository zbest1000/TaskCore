version: '3.8'

services:
  # Databases
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: taskcore
      POSTGRES_USER: taskcore
      POSTGRES_PASSWORD: taskcore_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  mongodb:
    image: mongo:7
    environment:
      MONGO_INITDB_ROOT_USERNAME: taskcore
      MONGO_INITDB_ROOT_PASSWORD: taskcore_dev
      MONGO_INITDB_DATABASE: taskcore
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Object Storage
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: taskcore
      MINIO_ROOT_PASSWORD: taskcore_dev
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  # Search Engine
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  # OCR Service
  paddleocr:
    build:
      context: ./services/paddleocr
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    volumes:
      - ./uploads:/app/uploads
      - ./services/paddleocr/logs:/app/logs
    environment:
      - PYTHONUNBUFFERED=1
      - PADDLEOCR_LANG=en
      - PADDLEOCR_USE_GPU=false
      - LOG_LEVEL=INFO

  # PaddleOCR MCP Server
  paddleocr-mcp:
    build:
      context: ./services/paddleocr
      dockerfile: Dockerfile.mcp
    ports:
      - "8889:8889"
    volumes:
      - ./uploads:/app/uploads
      - ./services/paddleocr/logs:/app/logs
    environment:
      - PYTHONUNBUFFERED=1
      - PADDLEOCR_LANG=en
      - PADDLEOCR_USE_GPU=false
      - PADDLEOCR_USE_ANGLE_CLS=true
      - MCP_SERVER_PORT=8889
      - LOG_LEVEL=INFO
    depends_on:
      - paddleocr
    restart: unless-stopped

  # API Gateway
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api-gateway
      - web-app

  # Core Services
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://taskcore:taskcore_dev@postgres:5432/taskcore
      - REDIS_URL=redis://redis:6379
      - MONGODB_URI=mongodb://taskcore:taskcore_dev@mongodb:27017/taskcore
    depends_on:
      - postgres
      - redis
      - mongodb

  auth-service:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://taskcore:taskcore_dev@postgres:5432/taskcore
      - JWT_SECRET=taskcore_jwt_secret_dev
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis

  project-service:
    build:
      context: ./services/projects
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://taskcore:taskcore_dev@postgres:5432/taskcore
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis

  knowledge-service:
    build:
      context: ./services/knowledge
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://taskcore:taskcore_dev@mongodb:27017/taskcore
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - mongodb
      - elasticsearch

  punch-list-service:
    build:
      context: ./services/punch-list
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://taskcore:taskcore_dev@mongodb:27017/taskcore
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=taskcore
      - MINIO_SECRET_KEY=taskcore_dev
      - PADDLEOCR_URL=http://paddleocr:8888
    depends_on:
      - mongodb
      - minio
      - paddleocr

  search-service:
    build:
      context: ./services/search
      dockerfile: Dockerfile
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - MONGODB_URI=mongodb://taskcore:taskcore_dev@mongodb:27017/taskcore
    depends_on:
      - elasticsearch
      - mongodb

  integration-service:
    build:
      context: ./services/integrations
      dockerfile: Dockerfile
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://taskcore:taskcore_dev@postgres:5432/taskcore
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis

  ai-assistant:
    build:
      context: ./services/ai-assistant
      dockerfile: Dockerfile
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://taskcore:taskcore_dev@mongodb:27017/taskcore
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - mongodb

  # Frontend Application
  web-app:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    ports:
      - "3100:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost/api
      - NEXT_PUBLIC_WS_URL=ws://localhost/ws
    depends_on:
      - api-gateway

volumes:
  postgres_data:
  mongodb_data:
  redis_data:
  minio_data:
  elasticsearch_data: